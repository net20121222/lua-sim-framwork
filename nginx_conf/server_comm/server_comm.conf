    error_page  404   /404;
    location = /404 {
        default_type application/json;
        content_by_lua '
            local resp = ngx.location.capture("/error?code=404")
            ngx.say(resp.body)
        ';
    }

    error_page   500 502 503 504  /50x;
    location = /50x {
        default_type application/json;
        content_by_lua '
            local resp = ngx.location.capture("/error?code=500")
            ngx.say(resp.body)
        ';
    }

    location = / {
        default_type application/json;
        content_by_lua '
            local resp = ngx.location.capture("/error?code=404")
            ngx.say(resp.body)
        ';
    }

    location /error {
        internal;
        default_type application/json;
        content_by_lua '
            local cjson = require "cjson"
            local args = ngx.req.get_uri_args()
            local code = args["code"]
            local msg = ""
            if code == nil then
                code = 404
            end

            if tonumber(code) == 500 then
                msg = "process is core!"
            else
                msg = "this request is not exist!"
            end

            local res = {}
            res["code"] = tonumber(code)
            res["message"] = msg
            ngx.say(cjson.encode(res))
        ';
    }

    #get 方式反向代理
    location /proxy_get{
        internal;
        set $pass_proxy_url '';
        rewrite_by_lua '
            ngx.var.pass_proxy_url = ngx.unescape_uri( ngx.var.arg_pass_proxy_host ) .. ngx.unescape_uri( ngx.var.arg_pass_proxy_url );
        ';

        proxy_http_version 1.1;
        proxy_pass http://$pass_proxy_url;
    }